{"version":3,"sources":["components/layout/Header.js","components/layout/Mondrian.js","App.js","serviceWorker.js","index.js"],"names":["Header","_useState","useState","_useState2","Object","slicedToArray","gitHubAnimation","setGitHubAnimation","_useState3","_useState4","linkedInAnimation","setLinkedInAnimation","react_default","a","createElement","className","href","onMouseEnter","onMouseLeave","dist_default","options","loop","autoplay","animationData","gitHubLogo","height","isStopped","linkedInLogo","cssColorArray","Mondrian","start","totalSquares","setTotalSquares","maxSize","setMaxSize","_useState5","_useState6","refresher","setRefersher","_useState7","_useState8","imgCreator","setImageCreator","mondrianGenerator","index","imgSRC","column","Math","floor","random","row","src","style","width","objectFit","alt","gridColumn","concat","gridRow","key","backgroundColor","length","itemCreation","Array","fill","map","_","idx","onClick","e","preventDefault","item","App","Header_Header","Mondrian_Mondrian","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8778fde.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Lottie from 'react-lottie';\r\nimport gitHubLogo from './github.json'\r\nimport linkedInLogo from './linkedin.json'\r\n\r\nimport './Header.css'\r\n\r\nexport default function Header() {\r\n\r\n    const [gitHubAnimation, setGitHubAnimation] = useState(true)\r\n    const [linkedInAnimation, setLinkedInAnimation] = useState(true)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"header-wrapper\">\r\n\r\n            <h1>CSS playground by</h1>\r\n            <div className=\"link-container\">\r\n                <h1><a href=\"https://jongaffney.tech/\">Jon Gaffney</a> {\"\\u00a0\"} \r\n                    <a href=\"https://github.com/JaGaffney\" \r\n                        onMouseEnter={() => setGitHubAnimation(false) } \r\n                        onMouseLeave={() => setGitHubAnimation(true) }\r\n                    >\r\n                        <Lottie \r\n                            options={{\r\n                            loop: false,\r\n                            autoplay: false, \r\n                            animationData: gitHubLogo,\r\n                            }}\r\n                            height={50}\r\n                            isStopped={gitHubAnimation}\r\n                        />\r\n                    </a> {\"\\u00a0\"}\r\n                    <a href=\"https://www.linkedin.com/in/jon-gaffney-13a100118/\"\r\n                        onMouseEnter={() => setLinkedInAnimation(false) } \r\n                        onMouseLeave={() => setLinkedInAnimation(true) }\r\n                    >\r\n                        <Lottie \r\n                            options={{\r\n                            loop: false,\r\n                            autoplay: false, \r\n                            animationData: linkedInLogo,\r\n                            }}\r\n                            height={50}\r\n                            isStopped={linkedInAnimation}\r\n                            \r\n                        />\r\n                    </a>\r\n                </h1>\r\n            </div>\r\n            <div className=\"nav-list\">\r\n                <ul>\r\n                    <li>This is a test website</li>\r\n                    <li>Where I can add snippets</li>\r\n                    <li>Of websites I have created</li>\r\n                    <li>To improve my css and js skills</li>\r\n                </ul>\r\n            </div>\r\n            <p className=\"follow-links\">\r\n                Inspired from <a href=\"https://labs.jensimmons.com/\"><strong>labs.jensimmons.com</strong></a>\r\n            </p>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport './Mondrian.css'\r\n\r\nlet cssColorArray = [\"AliceBlue\",\"AntiqueWhite\",\"Aqua\",\"Aquamarine\",\"Azure\",\"Beige\",\"Bisque\",\"Black\",\"BlanchedAlmond\",\"Blue\",\"BlueViolet\",\"Brown\",\"BurlyWood\",\"CadetBlue\",\"Chartreuse\",\"Chocolate\",\"Coral\",\"CornflowerBlue\",\"Cornsilk\",\"Crimson\",\"Cyan\",\"DarkBlue\",\"DarkCyan\",\"DarkGoldenRod\",\"DarkGray\",\"DarkGrey\",\"DarkGreen\",\"DarkKhaki\",\"DarkMagenta\",\"DarkOliveGreen\",\"Darkorange\",\"DarkOrchid\",\"DarkRed\",\"DarkSalmon\",\"DarkSeaGreen\",\"DarkSlateBlue\",\"DarkSlateGray\",\"DarkSlateGrey\",\"DarkTurquoise\",\"DarkViolet\",\"DeepPink\",\"DeepSkyBlue\",\"DimGray\",\"DimGrey\",\"DodgerBlue\",\"FireBrick\",\"FloralWhite\",\"ForestGreen\",\"Fuchsia\",\"Gainsboro\",\"GhostWhite\",\"Gold\",\"GoldenRod\",\"Gray\",\"Grey\",\"Green\",\"GreenYellow\",\"HoneyDew\",\"HotPink\",\"IndianRed\",\"Indigo\",\"Ivory\",\"Khaki\",\"Lavender\",\"LavenderBlush\",\"LawnGreen\",\"LemonChiffon\",\"LightBlue\",\"LightCoral\",\"LightCyan\",\"LightGoldenRodYellow\",\"LightGray\",\"LightGrey\",\"LightGreen\",\"LightPink\",\"LightSalmon\",\"LightSeaGreen\",\"LightSkyBlue\",\"LightSlateGray\",\"LightSlateGrey\",\"LightSteelBlue\",\"LightYellow\",\"Lime\",\"LimeGreen\",\"Linen\",\"Magenta\",\"Maroon\",\"MediumAquaMarine\",\"MediumBlue\",\"MediumOrchid\",\"MediumPurple\",\"MediumSeaGreen\",\"MediumSlateBlue\",\"MediumSpringGreen\",\"MediumTurquoise\",\"MediumVioletRed\",\"MidnightBlue\",\"MintCream\",\"MistyRose\",\"Moccasin\",\"NavajoWhite\",\"Navy\",\"OldLace\",\"Olive\",\"OliveDrab\",\"Orange\",\"OrangeRed\",\"Orchid\",\"PaleGoldenRod\",\"PaleGreen\",\"PaleTurquoise\",\"PaleVioletRed\",\"PapayaWhip\",\"PeachPuff\",\"Peru\",\"Pink\",\"Plum\",\"PowderBlue\",\"Purple\",\"Red\",\"RosyBrown\",\"RoyalBlue\",\"SaddleBrown\",\"Salmon\",\"SandyBrown\",\"SeaGreen\",\"SeaShell\",\"Sienna\",\"Silver\",\"SkyBlue\",\"SlateBlue\",\"SlateGray\",\"SlateGrey\",\"Snow\",\"SpringGreen\",\"SteelBlue\",\"Tan\",\"Teal\",\"Thistle\",\"Tomato\",\"Turquoise\",\"Violet\",\"Wheat\",\"White\",\"WhiteSmoke\",\"Yellow\",\"YellowGreen\"]\r\n\r\nexport default function Mondrian() {\r\n    const [totalSquares, setTotalSquares] = useState(20)\r\n    const [maxSize, setMaxSize] = useState(4)\r\n    const [refresher, setRefersher] = useState(true)\r\n    const [imgCreator, setImageCreator] = useState(false)\r\n\r\n    // creates the squares with styles and size\r\n    const imageGenerator = () => {\r\n        return <img src={`https://unsplash.it/2000/10` + Math.floor(Math.random() * 9) + 1} style={{height: \"100%\", width: \"100%\", objectFit: \"cover\"}} alt=\"\"></img>\r\n    }\r\n\r\n    const mondrianGenerator = (index) => {\r\n        let column = Math.floor(Math.random() * maxSize) + 1\r\n        let row = Math.floor(Math.random() * maxSize) + 1\r\n\r\n        let imgSRC\r\n        if (imgCreator){\r\n            imgSRC = imageGenerator()\r\n        }\r\n        \r\n        return (<li style={{gridColumn: `span ${column}`, gridRow: `span ${row}`}} key={index}>\r\n                    <div style={{backgroundColor: cssColorArray[Math.floor(Math.random()*cssColorArray.length)], height: '100%', width: '100%'}}>{imgSRC}</div>\r\n                </li>\r\n        )\r\n    }\r\n\r\n    const range = (start, end) => {\r\n        return Array(end - start + 1).fill().map((_, idx) => start + idx)\r\n    }\r\n    const itemCreation = range(1, totalSquares)\r\n\r\n    const onShapeHandlerIncrease = (e) => {\r\n        e.preventDefault()\r\n        let size\r\n        (maxSize <= 15 ? size = maxSize + 1 : size = 15)\r\n        setMaxSize(size)\r\n    }\r\n    const onShapeHandlerDecrease = (e) => {\r\n        e.preventDefault()\r\n        let size\r\n        (maxSize >= 1 ? size = maxSize - 1 : size = 0)\r\n        setMaxSize(size)\r\n    }\r\n\r\n    const onBoxHandlerIncrease = (e) => {\r\n        e.preventDefault()\r\n        let size\r\n        (totalSquares <= 50 ? size = totalSquares + 1 : size = 50)\r\n        setTotalSquares(size)\r\n    }\r\n    const onBoxHandlerDecrease = (e) => {\r\n        e.preventDefault()\r\n        let size\r\n        (totalSquares >= 1 ? size = totalSquares - 1 : size = 0)\r\n        setTotalSquares(size)\r\n    }\r\n\r\n    const onColourHandler = () => {\r\n        // forces a refresh of the colours by setting a new state\r\n        (refresher ? setRefersher(false) : setRefersher(true))\r\n    }\r\n\r\n    const onImageHandler = () => {\r\n        // forces a refresh of the colours by setting a new state\r\n        (imgCreator ? setImageCreator(false) : setImageCreator(true))\r\n    }\r\n\r\n    return (\r\n        <div className=\"mondrian-container\">\r\n\r\n            <h1>Mondrian Generator</h1>\r\n            <h4>Created using grid with dynamic child generation to create a fully responsive grid display</h4>\r\n            <h4>Colours could be easily be replaced with images/products to create a collage effect</h4>\r\n\r\n        <div className=\"mondrian-button-container\">\r\n            <div className=\"mondrian-buttons\">\r\n                <button onClick={onShapeHandlerDecrease}>-</button>\r\n                <h1>Change Size</h1>\r\n                <button onClick={onShapeHandlerIncrease}>+</button>\r\n            </div>\r\n\r\n            <div className=\"mondrian-buttons\">\r\n                <button onClick={onBoxHandlerDecrease}>-</button>\r\n                <h1>Change Ammount</h1>\r\n                <button onClick={onBoxHandlerIncrease}>+</button>\r\n            </div>\r\n   \r\n            <button onClick={onColourHandler}>Randomize colours</button>\r\n            <button onClick={onImageHandler}>{(!imgCreator ? \"Turn into images\" : \"Turn back to colours\")}</button>\r\n\r\n        </div>\r\n\r\n        <ul className=\"mondrian-wrapper\">\r\n            {itemCreation.map((item, index) => {\r\n                return mondrianGenerator(index)\r\n            })}\r\n        </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport Header from '../src/components/layout/Header';\n// import Header from '../src/components/layout/Header2';\nimport Mondrian from '../src/components/layout/Mondrian';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className=\"wrapper\">\n  \n          <header>\n            <Header />   \n          </header>\n\n          <div className=\"bar-break\"></div>  \n\n          <section className=\"mondrian\">\n            <Mondrian />\n          </section>\n\n          <div className=\"bar-break\"></div>  \n\n\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}