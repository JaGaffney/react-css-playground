{"version":3,"sources":["components/layout/Header.js","components/layout/Mondrian.js","components/layout/Monopoly.js","App.js","serviceWorker.js","index.js"],"names":["Header","_useState","useState","_useState2","Object","slicedToArray","gitHubAnimation","setGitHubAnimation","_useState3","_useState4","linkedInAnimation","setLinkedInAnimation","react_default","a","createElement","className","href","onMouseEnter","onMouseLeave","dist_default","options","loop","autoplay","animationData","gitHubLogo","height","isStopped","linkedInLogo","cssColorArray","animationArray","youtubeLogo","chromeLogo","codepenLogo","featherLogo","rssLogo","slackLogo","trelloLogo","twitterLogo","Mondrian","start","totalSquares","setTotalSquares","maxSize","setMaxSize","_useState5","_useState6","refresher","setRefersher","_useState7","_useState8","imgCreator","setImageCreator","_useState9","_useState10","animationsCreator","setAnimationsCreator","mondrianGenerator","index","imgSRC","column","Math","floor","random","row","src","style","width","objectFit","alt","size","animationNumber","length","animationGenerator","gridColumn","concat","gridRow","key","backgroundColor","itemCreation","Array","fill","map","_","idx","onClick","e","preventDefault","item","Monopoly","playerGo","setPlayerGo","player1Color","player2Color","player1Location","setPlayer1Location","player2Location","setPlayer2Location","_useState11","_useState12","currentRoll","setCurrentRoll","_useState13","player1","player2","_useState14","currentCash","setCurrentCash","_useState15","tile1","cost","location","owner","color","tile2","tile3","tile4","tile5","tile6","tile7","tile8","tile9","tile10","tile11","tile12","tile13","tile14","tile15","tile16","_useState16","tiles","setCurrentTiles","locationChecker","player","cash","keys","forEach","tile","rentPlayer","tileCost","_setCurrentCash","ownerPlayer","newCashRenter","newCashOwner","defineProperty","moneyChecker","parseInt","slice","tempCash","newCash","objectSpread","playerMovement","setter","roll","loc1","loc2","console","log","tempLocation","newLocation","alignItems","paddingTop","dice","background","alert","monopolyGenerator","App","Header_Header","Mondrian_Mondrian","Monopoly_Monopoly","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b2743ce.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Lottie from 'react-lottie';\r\nimport gitHubLogo from './animations/github.json'\r\nimport linkedInLogo from './animations/linkedin.json'\r\n\r\nimport './Header.css'\r\n\r\nexport default function Header() {\r\n\r\n    const [gitHubAnimation, setGitHubAnimation] = useState(true)\r\n    const [linkedInAnimation, setLinkedInAnimation] = useState(true)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"header-wrapper\">\r\n\r\n            <h1>CSS playground by</h1>\r\n            <div className=\"link-container\">\r\n                <h1><a href=\"https://jongaffney.tech/\">Jon Gaffney</a> {\"\\u00a0\"} \r\n                    <a href=\"https://github.com/JaGaffney\" \r\n                        onMouseEnter={() => setGitHubAnimation(false) } \r\n                        onMouseLeave={() => setGitHubAnimation(true) }\r\n                    >\r\n                        <Lottie \r\n                            options={{\r\n                            loop: false,\r\n                            autoplay: false, \r\n                            animationData: gitHubLogo,\r\n                            }}\r\n                            height={50}\r\n                            isStopped={gitHubAnimation}\r\n                        />\r\n                    </a> {\"\\u00a0\"}\r\n                    <a href=\"https://www.linkedin.com/in/jon-gaffney-13a100118/\"\r\n                        onMouseEnter={() => setLinkedInAnimation(false) } \r\n                        onMouseLeave={() => setLinkedInAnimation(true) }\r\n                    >\r\n                        <Lottie \r\n                            options={{\r\n                            loop: false,\r\n                            autoplay: false, \r\n                            animationData: linkedInLogo,\r\n                            }}\r\n                            height={50}\r\n                            isStopped={linkedInAnimation}\r\n                            \r\n                        />\r\n                    </a>\r\n                </h1>\r\n            </div>\r\n            <div className=\"nav-list\">\r\n                <ul>\r\n                    <li>This is a test website</li>\r\n                    <li>Where I can add snippets</li>\r\n                    <li>Of websites I have created</li>\r\n                    <li>To improve my css and js skills</li>\r\n                </ul>\r\n            </div>\r\n            <p className=\"follow-links\">\r\n                Inspired from <a href=\"https://labs.jensimmons.com/\"><strong>labs.jensimmons.com</strong></a>\r\n            </p>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Lottie from 'react-lottie';\r\n\r\n// animations\r\nimport gitHubLogo from './animations/github.json'\r\nimport linkedInLogo from './animations/linkedin.json'\r\nimport youtubeLogo from './animations/youtube.json'\r\nimport chromeLogo from './animations/chrome.json'\r\nimport codepenLogo from './animations/codepen.json'\r\nimport featherLogo from './animations/feather.json'\r\nimport rssLogo from './animations/rss.json'\r\nimport slackLogo from './animations/slack.json'\r\nimport trelloLogo from './animations/trello.json'\r\nimport twitterLogo from './animations/twitter.json'\r\n\r\n\r\nimport './Mondrian.css'\r\n\r\nlet cssColorArray = [\"AliceBlue\",\"AntiqueWhite\",\"Aqua\",\"Aquamarine\",\"Azure\",\"Beige\",\"Bisque\",\"BlanchedAlmond\",\"Blue\",\"BlueViolet\",\"Brown\",\"BurlyWood\",\"CadetBlue\",\"Chartreuse\",\"Chocolate\",\"Coral\",\"CornflowerBlue\",\"Cornsilk\",\"Crimson\",\"Cyan\",\"DarkBlue\",\"DarkCyan\",\"DarkGoldenRod\",\"DarkGray\",\"DarkGrey\",\"DarkGreen\",\"DarkKhaki\",\"DarkMagenta\",\"DarkOliveGreen\",\"Darkorange\",\"DarkOrchid\",\"DarkRed\",\"DarkSalmon\",\"DarkSeaGreen\",\"DarkSlateBlue\",\"DarkSlateGray\",\"DarkSlateGrey\",\"DarkTurquoise\",\"DarkViolet\",\"DeepPink\",\"DeepSkyBlue\",\"DimGray\",\"DimGrey\",\"DodgerBlue\",\"FireBrick\",\"FloralWhite\",\"ForestGreen\",\"Fuchsia\",\"Gainsboro\",\"GhostWhite\",\"Gold\",\"GoldenRod\",\"Gray\",\"Grey\",\"Green\",\"GreenYellow\",\"HoneyDew\",\"HotPink\",\"IndianRed\",\"Indigo\",\"Ivory\",\"Khaki\",\"Lavender\",\"LavenderBlush\",\"LawnGreen\",\"LemonChiffon\",\"LightBlue\",\"LightCoral\",\"LightCyan\",\"LightGoldenRodYellow\",\"LightGray\",\"LightGrey\",\"LightGreen\",\"LightPink\",\"LightSalmon\",\"LightSeaGreen\",\"LightSkyBlue\",\"LightSlateGray\",\"LightSlateGrey\",\"LightSteelBlue\",\"LightYellow\",\"Lime\",\"LimeGreen\",\"Linen\",\"Magenta\",\"Maroon\",\"MediumAquaMarine\",\"MediumBlue\",\"MediumOrchid\",\"MediumPurple\",\"MediumSeaGreen\",\"MediumSlateBlue\",\"MediumSpringGreen\",\"MediumTurquoise\",\"MediumVioletRed\",\"MidnightBlue\",\"MintCream\",\"MistyRose\",\"Moccasin\",\"NavajoWhite\",\"Navy\",\"OldLace\",\"Olive\",\"OliveDrab\",\"Orange\",\"OrangeRed\",\"Orchid\",\"PaleGoldenRod\",\"PaleGreen\",\"PaleTurquoise\",\"PaleVioletRed\",\"PapayaWhip\",\"PeachPuff\",\"Peru\",\"Pink\",\"Plum\",\"PowderBlue\",\"Purple\",\"Red\",\"RosyBrown\",\"RoyalBlue\",\"SaddleBrown\",\"Salmon\",\"SandyBrown\",\"SeaGreen\",\"SeaShell\",\"Sienna\",\"Silver\",\"SkyBlue\",\"SlateBlue\",\"SlateGray\",\"SlateGrey\",\"Snow\",\"SpringGreen\",\"SteelBlue\",\"Tan\",\"Teal\",\"Thistle\",\"Tomato\",\"Turquoise\",\"Violet\",\"Wheat\",\"White\",\"WhiteSmoke\",\"Yellow\",\"YellowGreen\"]\r\nlet animationArray = [gitHubLogo, linkedInLogo, youtubeLogo, chromeLogo, codepenLogo, featherLogo, rssLogo, slackLogo, trelloLogo, twitterLogo]\r\n\r\nexport default function Mondrian() {\r\n    const [totalSquares, setTotalSquares] = useState(20)\r\n    const [maxSize, setMaxSize] = useState(4)\r\n    const [refresher, setRefersher] = useState(true)\r\n    const [imgCreator, setImageCreator] = useState(false)\r\n    const [animationsCreator, setAnimationsCreator] = useState(false)\r\n\r\n    // creates the squares with styles and size\r\n    const imageGenerator = () => {\r\n        return <img src={`https://unsplash.it/2000/10` + Math.floor(Math.random() * 9) + 1} style={{height: \"100%\", width: \"100%\", objectFit: \"cover\"}} alt=\"\"></img>\r\n    }\r\n\r\n    const animationGenerator = (size) => {\r\n        let animationNumber = Math.floor(Math.random() * animationArray.length)\r\n\r\n        return (<div className=\"mondrian-animationGenerator-container\">\r\n            <Lottie \r\n                options={{\r\n                loop: false,\r\n                autoplay: true, \r\n                animationData: animationArray[animationNumber],\r\n                }}\r\n                height={size}\r\n            />\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const mondrianGenerator = (index) => {\r\n        let column = Math.floor(Math.random() * maxSize) + 1\r\n        let row = Math.floor(Math.random() * maxSize) + 1\r\n\r\n        let imgSRC\r\n        if (imgCreator){\r\n            imgSRC = imageGenerator()\r\n        }\r\n        if (animationsCreator){\r\n            let size = row * 80\r\n            imgSRC = animationGenerator(size)\r\n        }\r\n        \r\n        return (<li style={{gridColumn: `span ${column}`, gridRow: `span ${row}`}} key={index}>\r\n                    <div style={{backgroundColor: cssColorArray[Math.floor(Math.random()*cssColorArray.length)], height: '100%', width: '100%'}}>{imgSRC}</div>\r\n                </li>\r\n        )\r\n    }\r\n\r\n    const range = (start, end) => {\r\n        return Array(end - start + 1).fill().map((_, idx) => start + idx)\r\n    }\r\n    const itemCreation = range(1, totalSquares)\r\n\r\n    const onShapeHandlerIncrease = (e) => {\r\n        e.preventDefault()\r\n        let size\r\n        (maxSize <= 15 ? size = maxSize + 1 : size = 15)\r\n        setMaxSize(size)\r\n    }\r\n    const onShapeHandlerDecrease = (e) => {\r\n        e.preventDefault()\r\n        let size\r\n        (maxSize >= 1 ? size = maxSize - 1 : size = 0)\r\n        setMaxSize(size)\r\n    }\r\n\r\n    const onBoxHandlerIncrease = (e) => {\r\n        e.preventDefault()\r\n        let size\r\n        (totalSquares <= 50 ? size = totalSquares + 1 : size = 50)\r\n        setTotalSquares(size)\r\n    }\r\n    const onBoxHandlerDecrease = (e) => {\r\n        e.preventDefault()\r\n        let size\r\n        (totalSquares >= 1 ? size = totalSquares - 1 : size = 0)\r\n        setTotalSquares(size)\r\n    }\r\n\r\n    const onColourHandler = () => {\r\n        // forces a refresh of the colours by setting a new state\r\n        (refresher ? setRefersher(false) : setRefersher(true))\r\n    }\r\n\r\n    const onImageHandler = () => {\r\n        // forces a refresh of the colours by setting a new state\r\n        (imgCreator ? setImageCreator(false) : setImageCreator(true))\r\n        setAnimationsCreator(false)\r\n    }\r\n\r\n    const onAnimationsHandler = () => {\r\n        // forces a refresh of the colours by setting a new state\r\n        (animationsCreator ? setAnimationsCreator(false) : setAnimationsCreator(true))\r\n        setImageCreator(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mondrian-container\">\r\n\r\n            <h1>Mondrian Generator</h1>\r\n            <h4>Created using grid with dynamic child generation to create a fully responsive grid display</h4>\r\n            <h4>Colours could be easily be replaced with images/products to create a collage effect</h4>\r\n\r\n        <div className=\"mondrian-button-container\">\r\n            <div className=\"mondrian-buttons\">\r\n                <button onClick={onShapeHandlerDecrease}>-</button>\r\n                <h1>Change Size</h1>\r\n                <button onClick={onShapeHandlerIncrease}>+</button>\r\n            </div>\r\n\r\n            <div className=\"mondrian-buttons\">\r\n                <button onClick={onBoxHandlerDecrease}>-</button>\r\n                <h1>Change Ammount</h1>\r\n                <button onClick={onBoxHandlerIncrease}>+</button>\r\n            </div>\r\n   \r\n            <button onClick={onColourHandler}>Randomize</button>\r\n            <button onClick={onImageHandler}>{(!imgCreator ? \"Turn into images\" : \"Turn back to colours\")}</button>\r\n            <button onClick={onAnimationsHandler}>{(!animationsCreator ? \"Turn into Animation Icons\" : \"Turn back to colours\")}</button>\r\n\r\n        </div>\r\n\r\n        <ul className=\"mondrian-wrapper\">\r\n            {itemCreation.map((item, index) => {\r\n                return mondrianGenerator(index)\r\n            })}\r\n        </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Lottie from 'react-lottie';\r\n\r\nimport './Monopoly.css'\r\nimport gitHubLogo from './animations/github.json'\r\nimport linkedInLogo from './animations/linkedin.json'\r\n\r\nexport default function Monopoly() {\r\n\r\n    const [playerGo, setPlayerGo] = useState(true) // true for player 1\r\n    const [player1Color, setPlayer1Color] = useState('yellow')\r\n    const [player2Color, setPlayer2Color] = useState('skyblue')\r\n    const [player1Location, setPlayer1Location] = useState([1, 1, 1])\r\n    const [player2Location, setPlayer2Location] = useState([1, 1, 1])\r\n    const [currentRoll, setCurrentRoll] = useState('click me')\r\n    const [currentCash, setCurrentCash] = useState({player1: 250, player2: 250})\r\n    const [tiles, setCurrentTiles] = useState({\r\n        tile1: {cost: \"\", location: [1, 1], owner: \"Free\", color: \"orange\"},\r\n        tile2: {cost: \"$20\", location: [2, 1], owner: \"\", color: \"white\"},\r\n        tile3: {cost: \"$20\", location: [3, 1], owner: \"\", color: \"white\"},\r\n        tile4: {cost: \"$20\", location: [4, 1], owner: \"\", color: \"white\"},\r\n        tile5: {cost: \"\", location: [5, 1], owner: \"Free\", color: \"orange\"},\r\n        tile6: {cost: \"$40\", location: [5, 2], owner: \"\", color: \"white\"},\r\n        tile7: {cost: \"$40\", location: [5, 3], owner: \"\", color: \"white\"},\r\n        tile8: {cost: \"$40\", location: [5, 4], owner: \"\", color: \"white\"},\r\n        tile9: {cost: \"\", location: [5, 5], owner: \"Free\", color: \"orange\"},\r\n        tile10: {cost: \"$60\", location: [4, 5], owner: \"\", color: \"white\"},\r\n        tile11: {cost: \"$60\", location: [3, 5], owner: \"\", color: \"white\"},\r\n        tile12: {cost: \"$60\", location: [2, 5], owner: \"\", color: \"white\"},\r\n        tile13: {cost: \"\", location: [1, 5], owner: \"Free\", color: \"orange\"},\r\n        tile14: {cost: \"$80\", location: [1, 4], owner: \"\", color: \"white\"},\r\n        tile15: {cost: \"$80\", location: [1, 3], owner: \"\", color: \"white\"},\r\n        tile16: {cost: \"$80\", location: [1, 2], owner: \"\", color: \"white\"},\r\n    })\r\n\r\n    const moneyChecker = (tileCost, rentPlayer, cash) => {\r\n        let ownerPlayer = (playerGo ? 'player2' : 'player1')\r\n        let newCashRenter = currentCash[rentPlayer] - tileCost\r\n        let newCashOwner = currentCash[ownerPlayer] + tileCost\r\n        setCurrentCash({[rentPlayer]: newCashRenter, [ownerPlayer]: newCashOwner})\r\n    }\r\n\r\n    const locationChecker = (player, location, color, cash) => {\r\n        Object.keys(tiles).forEach( (tile, index) => {\r\n            if (tiles[tile]['location'][0] === location[0] && tiles[tile]['location'][1] === location[1] && tiles[tile]['owner'] === ''){\r\n                let tempCash = tiles[tile]['cost'].slice(1)\r\n                let newCash = cash - parseInt(tempCash)\r\n                if (newCash > 0) {\r\n                    setCurrentCash({...currentCash, [player]: newCash})\r\n                    setCurrentTiles({...tiles, [tile]: {\r\n                        owner: player, \r\n                        location: tiles[tile]['location'], \r\n                        cost: tiles[tile]['cost'], \r\n                        color: color}\r\n                    })\r\n                }\r\n                return\r\n            } \r\n            if (tiles[tile]['location'][0] === location[0] && tiles[tile]['location'][1] === location[1]){\r\n                let rentPlayer = player\r\n                let tileCost = (tiles[tile]['cost'] === \"\" ? 0 : parseInt(tiles[tile]['cost'].slice(1)))\r\n                moneyChecker(tileCost, rentPlayer, cash)\r\n            }\r\n        })\r\n    }\r\n    // still needs work as sometimes it appears to not work out the bottom and left side correctley\r\n    const playerMovement = (player, location, setter, color, cash) => {\r\n        // needs to declare the roll insitaly due to delay when settings\r\n        let roll = Math.floor(Math.random() * 3) + 1;\r\n        setCurrentRoll(roll)\r\n        let loc1 = 1\r\n        let loc2 = 1\r\n        // top side\r\n        if (location[2] === 1) {\r\n            console.log(\"top side\")\r\n            let tempLocation = location[0] + roll\r\n            if (tempLocation >= 6) {\r\n                let newLocation = tempLocation - 5\r\n                loc1 = 5\r\n                loc2 = newLocation\r\n                setter([5, newLocation, 2])\r\n            } else {\r\n                loc1 = tempLocation\r\n                loc2 = location[1]\r\n                setter([tempLocation, location[1], location[2]])  \r\n            }\r\n            locationChecker(player, [loc1, loc2], color, cash)\r\n            return\r\n        }\r\n        // right side\r\n        if (location[2] === 2) {\r\n            console.log(\"right side\")\r\n            let tempLocation = location[1] + roll\r\n            if (tempLocation >= 6) {\r\n                let newLocation = tempLocation - 5\r\n                loc1 = newLocation\r\n                loc2 = 5\r\n                setter([newLocation, 5, 3])\r\n            } else {\r\n                loc1 = location[0]\r\n                loc2 = tempLocation\r\n                setter([location[0], tempLocation, location[2]])  \r\n            }\r\n            locationChecker(player, [loc1, loc2], color, cash)\r\n            return\r\n        }\r\n        // bottom side\r\n        if (location[2] === 3) {\r\n            console.log(\"bottom side\")\r\n            let tempLocation = location[0] - roll\r\n            if (tempLocation <= 1) {\r\n                let newLocation = tempLocation + 4\r\n                loc1 = 1\r\n                loc2 = newLocation\r\n                setter([1, newLocation, 4])\r\n            } else {\r\n                loc1 = tempLocation\r\n                loc2 = location[1]\r\n                setter([tempLocation, location[1], location[2]])  \r\n            }\r\n            locationChecker(player, [loc1, loc2], color, cash)\r\n            return\r\n        }\r\n        // left side\r\n        if (location[2] === 4) {\r\n            console.log('left side')\r\n            let tempLocation = location[1] - roll\r\n            if (tempLocation <= 1) {\r\n                let newLocation = tempLocation + 4\r\n                loc1 = tempLocation\r\n                loc2 = 1\r\n                setter([tempLocation, 1, 1])\r\n            } else {\r\n                loc1 = location[0]\r\n                loc2 = tempLocation\r\n                setter([location[0], tempLocation, location[2]])  \r\n            }\r\n            locationChecker(player, [loc1, loc2], color, cash)\r\n            return\r\n        }   \r\n    }\r\n    \r\n    const onDiceRollHandler = () => {\r\n        // decides on which players go it is\r\n        (playerGo ? playerMovement('player1', player1Location, setPlayer1Location, player1Color, currentCash['player1']) : playerMovement('player2', player2Location, setPlayer2Location, player2Color, currentCash['player2']))\r\n        setPlayerGo(!playerGo)\r\n        \r\n    }\r\n\r\n    // creates the initial players\r\n    let player1 = (<li style={{\"gridColumn\": player1Location[0], \"gridRow\": player1Location[1], alignItems: \"flex-start\"}}>Player 1</li>)\r\n    let player2 = (<li style={{\"gridColumn\": player2Location[0], \"gridRow\": player2Location[1], alignItems: \"flex-start\", paddingTop: \"3rem\"}}>Player 2</li>)\r\n\r\n    let dice = (<div className=\"dice-container\">\r\n        <h1>Turn: <span style={{ 'background': (playerGo ? player1Color : player2Color)}}>{(playerGo ? \"Player 1\" : \"Player 2\")}</span></h1>\r\n        <div className=\"dice\">\r\n            <span>{currentRoll}</span>\r\n        </div>\r\n    </div>\r\n    )\r\n\r\n    // const lottie = (animation) => {\r\n    //     return (<div className=\"monopoly-owner-container\">\r\n    //         <Lottie \r\n    //             options={{\r\n    //             loop: false,\r\n    //             autoplay: true, \r\n    //             animationData: animation,\r\n    //             }}\r\n    //         height={50}\r\n    //     />          \r\n    //     </div>)\r\n    // } \r\n    const monopolyGenerator = (item, index) => {\r\n        return(\r\n            <li style={{\"gridColumn\": tiles[item]['location'][0], \"gridRow\": tiles[item]['location'][1], 'background': tiles[item]['color']}} key={`title${index}`}>\r\n                <span>{tiles[item]['cost']}</span>\r\n                <span>{tiles[item]['owner']}</span>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"monopoly-container\">\r\n           <h1>Monopoly Generator with Grid</h1> \r\n           <br />\r\n\r\n            <div className=\"monopoly-rules\">\r\n                <h3>How to Play</h3>\r\n                <ul className=\"monopoly-rules-list\">\r\n                    <li>Click the dice to start</li>\r\n                    <li>When a player lands on a tile that is not owned by a previous player they buy that tile</li>\r\n                    <li>If a player lands on a bought tile they will need to pay the fee</li>\r\n                    <li>The game is over when a player looses all their money</li>\r\n                </ul>\r\n            </div>\r\n\r\n            {(currentCash['player1'] < 0 ? alert(\"Player 2 has won\") : \"\")}\r\n            {(currentCash['player2'] < 0 ? alert(\"Player 1 has won\") : \"\")}\r\n            <h1><span style={{'background': player1Color}}>Player 1 cash: ${currentCash['player1']}</span></h1>\r\n            <h1><span style={{'background': player2Color}}>Player 2 cash: ${currentCash['player2']}</span></h1>\r\n            \r\n        <ul className=\"monopoly-wrapper\"> \r\n            {/* <li><span>{tiles.tile1.cost}</span>{tiles.tile1.owner}</li>\r\n            <li><span>{tiles.tile2.cost}</span>{tiles.tile2.owner}</li>\r\n            <li><span>{tiles.tile3.cost}</span><div className=\"monopoly-owner-container\"><span>{tiles.tile3.owner}</span></div></li>\r\n            <li><span>{tiles.tile4.cost}</span><div className=\"monopoly-owner-container\">{tiles.tile4.owner}</div></li>\r\n            <li><span>{tiles.tile5.cost}</span><div className=\"monopoly-owner-container\">{tiles.tile5.owner}</div></li>\r\n            <li><span>{tiles.tile6.cost}</span><div className=\"monopoly-owner-container\">{tiles.tile6.owner}</div></li>\r\n            <li><span>{tiles.tile7.cost}</span><div className=\"monopoly-owner-container\">{tiles.tile7.owner}</div></li>\r\n            <li><span>{tiles.tile8.cost}</span><div className=\"monopoly-owner-container\">{tiles.tile8.owner}</div></li>\r\n            <li><span>{tiles.tile9.cost}</span><div className=\"monopoly-owner-container\">{tiles.tile9.owner}</div></li>\r\n            <li><span>{tiles.tile10.cost}</span><div>{tiles.tile10.owner}</div></li>\r\n            <li><span>{tiles.tile11.cost}</span><div>{tiles.tile11.owner}</div></li>\r\n            <li><span>{tiles.tile12.cost}</span><div>{tiles.tile12.owner}</div></li>\r\n            <li><span>{tiles.tile13.cost}</span><div>{tiles.tile13.owner}</div></li>\r\n            <li><span>{tiles.tile14.cost}</span><div>{tiles.tile14.owner}</div></li>\r\n            <li><span>{tiles.tile15.cost}</span><div>{tiles.tile15.owner}</div></li>\r\n            <li><span>{tiles.tile16.cost}</span><span>{tiles.tile16.owner}</span></li> */}\r\n            {Object.keys(tiles).map((item, index) => {\r\n                return monopolyGenerator(item, index)\r\n            })}\r\n            {player1}\r\n            {player2}\r\n            <li className=\"dice-wrapper\" onClick={onDiceRollHandler}>{dice}</li>\r\n        </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\n\nimport Header from '../src/components/layout/Header';\nimport Mondrian from '../src/components/layout/Mondrian';\nimport Monopoly from '../src/components/layout/Monopoly';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className=\"wrapper\">\n  \n          <header>\n            <Header />   \n          </header>\n\n          <div className=\"bar-break\"></div>  \n\n          <section className=\"mondrian\">\n            <Mondrian />\n          </section>\n\n          <div className=\"bar-break\"></div>  \n\n          <section className=\"monopoly\">\n            <Monopoly />\n          </section>\n\n          <div className=\"bar-break\"></div>  \n\n\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}